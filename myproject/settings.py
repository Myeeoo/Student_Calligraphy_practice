"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path
import configparser

# from apscheduler.schedulers.background import BackgroundScheduler
# from django.core.management import call_command
# from django.core.management import execute_from_command_line
# # 创建调度器
# scheduler = BackgroundScheduler()
# 设置定时任务 execute_from_command_line(['manage.py', 'update_commit_logs'])
# scheduler.add_job(call_command, 'interval', args=['update_commit_logs'], minutes=60)  # 每60分钟执行一次
# scheduler.add_job(execute_from_command_line, 'interval',args=['update_commit_logs'], minutes=1)

# 启动调度器
# scheduler.start()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# 获取配置文件的路径
config_path = os.path.join(BASE_DIR, 'config.ini')

# 创建 ConfigParser 对象
config = configparser.ConfigParser()

# 读取配置文件
config.read(config_path)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-40mw$cu^2@fn#uw#=ytjpf+i3r2@o!!n10e@#dqoexd)jw#yjd'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_plotly_dash.apps.DjangoPlotlyDashConfig',
    'myapp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
    # 'default': {
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': config.get('Credentials', 'DB_NAME'),
    #     'USER': config.get('Credentials', 'DB_USER'),
    #     'PASSWORD': config.get('Credentials', 'DB_PASSWORD'),
    #     'HOST': config.get('Credentials', 'DB_HOST'),
    #     'PORT': config.get('Credentials', 'DB_PORT'),
    # }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/
# 支持的语言列表
LANGUAGES = [
    ('en', 'English'),
    ('zh-hans', '简体中文'),
    # 添加其他支持的语言
]
# 国际化设置
USE_I18N = True

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'locale'),
]

LOGIN_URL = '/login/'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/checkin_images/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'checkin_images')

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

PLOTLY_DASH = {
    'routes': [
        {
            'app': 'myapp',  # 创建的Dash应用程序所在的app名称
            'route': '/dash/',  # 访问Dash应用程序的路由路径
        },
    ],
}

X_FRAME_OPTIONS = 'SAMEORIGIN'


